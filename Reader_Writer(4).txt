#include <stdlib.h>
#include <stdio.h>
#include <semaphore.h>
#include <pthread.h>
pthread_mutex_t x, wsem;
pthread_t tid;
int readcount;

void initialize()
{
    readcount = 0;
    pthread_mutex_init(&x, NULL);
    pthread_mutex_init(&wsem, NULL);
}
void *reader(void *param)
{
    int wait_time;
    wait_time = rand() % 5;
    printf("Reader is trying to enter\n");
    pthread_mutex_lock(&x);
    readcount++;
    if (readcount == 1)
        pthread_mutex_lock(&wsem);
    printf("%d Reader inside", readcount);
    pthread_mutex_unlock(&x);
    sleep(wait_time);
    readcount--;
    if (readcount == 0)
        ;
    pthread_mutex_unlock(&wsem);
    pthread_mutex_unlock(&x);

    printf("Reader Leaving\n");
}
void *writer(void *param)
{
    int wait_time;
    wait_time = rand() % 3;
    printf("Writer is trying to enter\n");
    pthread_mutex_lock(&wsem);
    printf("Writers inside\n");
    pthread_mutex_unlock(&wsem);
    printf("Writers leaving\n");
}
int main()
{
    int n1, n2;
    printf("Enter the total no of readers\n :");
    scanf("%d", &n1);
    printf("Enter the total no of writers\n :");
    scanf("%d", &n2);
    initialize();
    for(int i=0;i<n1;i++)
        pthread_create(&tid,NULL,reader,NULL);
    for(int i=0;i<n2;i++)
        pthread_create(&tid,NULL,writer,NULL);
    sleep(10);
    exit(0);
    
}

/*

Enter the total no of readers
 :2
Enter the total no of writers
 :1
Reader is trying to enter
1 Reader insideWriter is trying to enter
Reader is trying to enter
2 Reader insideReader Leaving
Writers inside
Writers leaving
Reader Leaving
*/