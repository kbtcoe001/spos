#include <bits/stdc++.h>
using namespace std;

const int N = 100005;

void fifo_page_replacement(int frame_size, int n, int pages[]) {
    int mark[N];
    queue<int> Q;
    int page_faults = 0;

    for (int i = 0; i < n; i++) {
        if (mark[pages[i]] == true) {
            // Page is already in memory, do nothing.
        } else {
            Q.push(pages[i]);
            mark[pages[i]] = true;

            if (Q.size() > frame_size) {
                int p = Q.front();
                mark[p] = false;
                Q.pop();
            }
            page_faults++;
        }

        cout << "Page Reference: " << pages[i] << "  Frame State: ";
        queue<int> tempQ = Q; // Create a copy of the queue for printing
        while (!tempQ.empty()) {
            cout << tempQ.front() << " ";
            tempQ.pop();
        }
        cout << "   Page Faults: " << page_faults << "   Page Hits: " << i - page_faults + 1 << endl;
    }

    cout << "Frame size          Page faults          Page Hits\n";
    cout << "     " << frame_size << "                     " << page_faults << "                " << n - page_faults << "\n";
}

int main() {
    int frame_size = 4;
    int pages[N];
    int n;

    cout << "Page Reference Stream Length: ";
    cin >> n;
    cout << "Page Reference Stream:\n";
    for (int i = 0; i < n; i++)
        cin >> pages[i];

    fifo_page_replacement(frame_size, n, pages);
    return 0;
}
	

/*

Page Reference Stream Length: 12
Page Reference Stream:
0
2
1
6
4
0
1
0
3
1
2
1
Page Reference: 0  Frame State: 0    Page Faults: 1   Page Hits: 0
Page Reference: 2  Frame State: 0 2    Page Faults: 2   Page Hits: 0
Page Reference: 1  Frame State: 0 2 1    Page Faults: 3   Page Hits: 0
Page Reference: 6  Frame State: 0 2 1 6    Page Faults: 4   Page Hits: 0
Page Reference: 4  Frame State: 2 1 6 4    Page Faults: 5   Page Hits: 0
Page Reference: 0  Frame State: 1 6 4 0    Page Faults: 6   Page Hits: 0
Page Reference: 1  Frame State: 1 6 4 0    Page Faults: 6   Page Hits: 1
Page Reference: 0  Frame State: 1 6 4 0    Page Faults: 6   Page Hits: 2
Page Reference: 3  Frame State: 6 4 0 3    Page Faults: 7   Page Hits: 2
Page Reference: 1  Frame State: 4 0 3 1    Page Faults: 8   Page Hits: 2
Page Reference: 2  Frame State: 0 3 1 2    Page Faults: 9   Page Hits: 2
Page Reference: 1  Frame State: 0 3 1 2    Page Faults: 9   Page Hits: 3
Frame size          Page faults          Page Hits
     4                     9                3

*/